{"version":3,"sources":["Components/styles/globalStyles.tsx","Components/styles/theme.ts","Components/styles/todoStyles.tsx","Components/EmojiPicker.tsx","Components/InputForm.tsx","Components/RenderedEmoji.tsx","Components/ToDo.tsx","Components/Options.tsx","Components/ListHeader.tsx","Components/storage/LocalStorage.tsx","Components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","props","theme","mainBackgroundColor","lightTheme","todoBackgroundColor","mainBackground","mobileBackground","themeChanger","headerColor","optionsColor","optionsHover","optionsActive","todoTextColor","todoTextLineThrough","shadowColor","borderColor","CustomCheckbox","styled","div","index","TodoBox","li","done","StyledSpanEmoji","StyledDivWrapperEmoji","EmojiPicker","useEffect","onMouseLeave","refresh","React","useState","isShowEmoji","setEmojiState","isTouchDevice","document","documentElement","onClick","src","alt","className","onSelect","addEmoji","showPreview","autoFocus","InvisibleSubmit","button","StyledInputForm","form","InputForm","submitRef","createRef","textRef","doneRef","doRefresh","onSubmit","event","preventDefault","value","current","todo","key","Date","now","toString","title","checked","newIndex","addTodo","currentTarget","reset","type","name","id","ref","htmlFor","data-testid","onKeyPress","click","stopPropagation","data","native","focus","span","isDone","RenderedEmoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","size","CancelButton","ToDo","state","setFocus","element","setSelectionRange","length","onChange","updatedTodo","target","changeTodo","e","console","log","style","maxWidth","deleteTodo","OptionsField","ul","FilterItem","ClearCompleted","Options","handleChange","changeFilter","status","activeTodos","this","todos","reduce","tally","defaultChecked","filter","deleteTodos","Component","DatePickerWrapper","StyledHeader","ListHeader","startDate","setStartDate","isOpen","setIsOpen","formatString","format","inline","dateFormat","date","window","print","ReactGA","category","action","inIframe","self","top","useStickyState","defaultValue","stickyValue","localStorage","getItem","JSON","setValue","setItem","stringify","removeItem","TodoWrapper","TodoList","BackgroundHeader","Footer","footer","App","todosSetValue","filterValue","setFilter","currentTheme","defaultTodos","addEventListener","call","forEach","push","label","domain","parent","postMessage","newTodos","myIndex","findIndex","item","splice","applyListFilter","getIndex","onDragEnd","result","destination","reorderedTodos","source","movedTodo","onDragUpdate","initial","provided","indexes","map","indexOf","droppableId","snapshot","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","filterObject","uncomplete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialize","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5dd88157.chunk.js","sourcesContent":["\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport {Theme} from \"./theme\";\r\n\r\nimport './emoji.css';\r\n \r\ninterface Props {\r\n    theme: Theme;\r\n}\r\n  \r\nconst GlobalStyle = createGlobalStyle<Props>`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n\r\n  -webkit-print-color-adjust: exact !important;   /* Chrome, Safari, Edge */\r\n  color-adjust: exact !important;                 /*Firefox*/\r\n}\r\n\r\n\r\n    *, *:before, *:after {\r\n    }\r\n\r\n    \r\n\r\n    body {\r\n        font-family: \"Josefin Sans\", sans-serif;\r\n        line-height: 1.5;\r\n        background-color: ${props => props.theme.mainBackgroundColor};\r\n        min-height: 100vh;\r\n        overflow: none;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    li {\r\n        list-style: none;\r\n    }\r\n\r\n    input:focus,\r\n    input:active,\r\n    button:focus,\r\n    button:active {\r\n        outline: none;\r\n        border: none;\r\n    }\r\n\r\n\r\n\r\n    .emoji-mart-scroll {\r\n        border-bottom: 0;\r\n        margin-bottom: 6px;\r\n      }\r\n      \r\n      .emoji-mart-scroll + .emoji-mart-bar {\r\n        display: none;\r\n      }\r\n\r\n      @media print\r\n        {    \r\n\r\n            .no-print, .no-print *\r\n            {\r\n                display: none !important;\r\n            }\r\n        }\r\n`;\r\n \r\nexport default GlobalStyle;","// could I create a general theme and extend later to avoid duplication?\r\n\r\nexport interface Theme {\r\n    mainBackgroundColor: string;\r\n    todoBackgroundColor: string;\r\n    mainBackground: string;\r\n    mobileBackground: string;\r\n    themeChanger: string;\r\n    headerColor: string;\r\n    optionsColor: string;\r\n    optionsHover: string;\r\n    optionsActive: string;\r\n    todoTextColor: string;\r\n    todoTextLineThrough: string;\r\n    shadowColor: string;\r\n    borderColor: string;\r\n}\r\n\r\n\r\nexport const lightTheme: Theme = {\r\n    mainBackgroundColor: 'hsl(0, 0%, 98%)',\r\n    todoBackgroundColor: 'hsl(0, 0%, 100%)',\r\n    mainBackground: `url(${process.env.PUBLIC_URL + '/images/bg-desktop-light.jpg'})`,\r\n    mobileBackground: `url(${process.env.PUBLIC_URL + '/images/bg-mobile-light.jpg'})`,\r\n    themeChanger: `url(${process.env.PUBLIC_URL + '/images/icon-moon.svg'})`,\r\n    headerColor: 'hsl(0, 0%, 100%)',\r\n    optionsColor: 'hsl(236, 9%, 61%)',\r\n    optionsHover: 'hsl(236, 9%, 35%)',\r\n    optionsActive: 'hsl(220, 98%, 61%)',\r\n    todoTextColor: 'hsl(235, 19%, 35%)',\r\n    todoTextLineThrough: 'hsl(236, 9%, 61%)',\r\n    shadowColor: 'hsl(236, 33%, 92%)',\r\n    borderColor: 'hsl(236, 33%, 92%)',\r\n\r\n}\r\n\r\nexport const darkTheme: Theme = {\r\n    mainBackgroundColor: 'hsl(235, 21%, 11%);',\r\n    todoBackgroundColor: 'hsl(235, 24%, 19%);',\r\n    mainBackground: `url(${process.env.PUBLIC_URL + '/images/bg-desktop-dark.jpg'})`,\r\n    mobileBackground: `url(${process.env.PUBLIC_URL + '/images/bg-mobile-dark.jpg'})`,\r\n    themeChanger: `url(${process.env.PUBLIC_URL + '/images/icon-sun.svg'})`,\r\n    headerColor: 'hsl(0, 0%, 100%)',\r\n    optionsColor: 'hsl(233, 14%, 35%)',\r\n    optionsHover: 'hsl(234, 39%, 85%);',\r\n    optionsActive: 'hsl(220, 98%, 61%)',\r\n    borderColor: 'hsl(233, 14%, 35%)',\r\n    todoTextColor: 'hsl(234, 39%, 85%)',\r\n    todoTextLineThrough: 'hsl(233, 14%, 35%)',\r\n    shadowColor: 'hsl(0, 0%, 0%)',\r\n}","import styled from 'styled-components';\r\nimport {Theme} from './theme';\r\n\r\ninterface CustomCheckboxProps {\r\n  index: number;\r\n  theme: Theme;\r\n}\r\n\r\nexport const CustomCheckbox = styled.div<CustomCheckboxProps>`\r\n\r\n  position: relative;\r\n  height: 1.3em;\r\n  width: 0.8em;\r\n\r\n  label {\r\n    border: 1px solid ${props => {\r\n      if (props.index < 3) {\r\n        return \"rgb(255, 105, 105);\";\r\n      } else if (props.index < 6) {\r\n        return \"rgb(171 116 0);\";\r\n      } else {\r\n        return \"rgb(71 89 131);\"\r\n      }\r\n    }}\r\n    border-radius: 25%;\r\n    border-width: ${props => {\r\n      if (props.index < 3) {\r\n        return \"0.1em;\";\r\n      } else if (props.index < 6) {\r\n        return \"0.12em;\";\r\n      } else {\r\n        return \"0.12em;\"\r\n      }\r\n    }}\r\n    cursor: pointer;\r\n    height: 1.2em;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 1.2em;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  label:hover {\r\n    border-color2: ${props => props.theme.optionsHover};\r\n  }\r\n\r\n  label img {\r\n    opacity: 0;\r\n    width: 55%;\r\n  }\r\n\r\n  input[type=\"checkbox\"] {\r\n    visibility: hidden;\r\n  }\r\n\r\n  input[type=\"checkbox\"]:checked + label {\r\n    background2: linear-gradient(120deg, #57ddff, #c058f3);\r\n    border2: none;\r\n  }\r\n\r\n  \r\n  input[type=\"checkbox\"] + label span {\r\n    display: none;\r\n  }\r\n  \r\n  input[type=\"checkbox\"]:checked + label span {\r\n    margin-top: 0.2em;\r\n    display: block;\r\n\r\n  }\r\n\r\n  input[type=\"checkbox\"]:checked + label img {\r\n    opacity: 1;\r\n  }\r\n\r\n`;\r\n\r\n\r\ninterface TodoBoxProps {\r\n  done: boolean;\r\n  index: number;\r\n}\r\n\r\nexport const TodoBox = styled.li<TodoBoxProps>`\r\n  background-color: ${props => props.theme.todoBackgroundColor};\r\n  \r\n  color: ${props => {\r\n    if (props.index < 3) {\r\n      return \"rgb(255, 105, 105);\";\r\n    } else if (props.index < 6) {\r\n      return \"rgb(171 116 0);\";\r\n    } else {\r\n      return \"rgb(71 89 131);\"\r\n    }\r\n  }}\r\n \r\n  padding: ${props => {\r\n    /* top | right | bottom | left */\r\n    if (props.index < 3) {\r\n      return \"0.7em 0.7em 0.7em 1em\";\r\n    } else if (props.index < 6) {\r\n      return \"0.7em 0.7em 0.7em 1.6em\";\r\n    } else {\r\n      return \"0.8em 0.7em 0.8em 2.0em\";\r\n    }\r\n  }};\r\n  grid-gap: 1em;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(0, 1fr) 20px 20px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 2px dotted hsl(236deg 3% 81%);\r\n\r\n  font-size: ${props => {\r\n    if (props.index < 3) {\r\n      return \"30px\";\r\n    } else if (props.index < 6) {\r\n      return \"22px\";\r\n    } else {\r\n      return \"18px\";\r\n    }\r\n  }};\r\n\r\n  .emoji {\r\n    vertical-align: sub;\r\n      margin-left: 3px;\r\n      margin-right: 3px;\r\n\r\n      height: ${props => {\r\n        if (props.index < 3) {\r\n          return \"30px\";\r\n        } else if (props.index < 6) {\r\n          return \"22px\";\r\n        } else {\r\n          return \"18px\";\r\n        }\r\n      }};\r\n      width: ${props => {\r\n        if (props.index < 3) {\r\n          return \"30px\";\r\n        } else if (props.index < 6) {\r\n          return \"22px\";\r\n        } else {\r\n          return \"18px\";\r\n        }\r\n      }};\r\n  }\r\n\r\n  -webkit-transition: all 0.3s;\r\n  -moz-transition: all 0.3s;\r\n    -o-transition: all 0.3s;\r\n       transition: all 0.3s;\r\n\r\n\r\n  \r\n  input, textarea {\r\n\r\n    \r\n   \r\n    @media print { \r\n      display: none !important;\r\n    }\r\n\r\n    font: inherit;\r\n    background: inherit;\r\n    \r\n    color: inherit;\r\n    border: none;\r\n    \r\n    \r\n    border: none;\r\n    overflow: auto;\r\n    outline: none;\r\n\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n    box-shadow: none;\r\n\r\n    resize: none; /*remove the resize handle on the bottom right*/\r\n    overflow: hidden;\r\n\r\n    text-decoration: ${props => props.done && 'line-through'};\r\n  }\r\n\r\n  textarea::-webkit-scrollbar,  textarea::scrollbar{\r\n    display: none;\r\n  }\r\n\r\n\r\n  @media (max-width: 650px) {\r\n    \r\n  }\r\n`;\r\n//color: ${props => props.done ? props.theme.todoTextLineThrough : props.theme.todoTextColor};","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\n\r\nconst StyledSpanEmoji = styled.div`\r\n@media print { display: none !important; }\r\n\r\ncolor: black;\r\n-webkit-filter: grayscale(100%);\r\nfilter: grayscale(100%);\r\n\r\nheight: 1.5em;\r\nwidth: 1.5em;\r\n\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\nimg {\r\n    height: 20px;\r\n    cursor: pointer;\r\n\r\n}\r\n`;\r\n\r\n\r\nconst StyledDivWrapperEmoji = styled.div`\r\n\r\nwidth: 0;\r\nright: 400px;\r\nz-index: 1000;\r\nposition: absolute;\r\nheight: 0;\r\n\r\n.wrapper {\r\n    width: 360px;\r\n}\r\n\r\n`;\r\n\r\ninterface IProps {\r\n    addEmoji(value: any): void;\r\n    refresh: boolean;\r\n}\r\n\r\nexport const EmojiPicker =  (props: IProps) => {\r\n \r\n    useEffect(() => {\r\n        onMouseLeave(); //children function of interest\r\n      }, [props.refresh]);\r\n      \r\n    const [isShowEmoji, setEmojiState] = React.useState(false);\r\n\r\n    const isTouchDevice = ('ontouchstart' in document.documentElement);\r\n\r\n    const toggleEmoji = () => {\r\n        setEmojiState(!isShowEmoji);\r\n    }\r\n\r\n    const onMouseLeave = () => {\r\n        setEmojiState(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!isTouchDevice ?\r\n               <StyledSpanEmoji onClick={toggleEmoji}>\t<img src={process.env.PUBLIC_URL + \"/images/emoticon-30-xxl.png\"} alt=\"\" /></StyledSpanEmoji>\r\n\r\n               : null}\r\n\r\n            {isShowEmoji ?\r\n                <StyledDivWrapperEmoji>\r\n                    <div className=\"wrapper\" onMouseLeave={onMouseLeave}>\r\n                        <Picker onSelect={props.addEmoji} showPreview={false} autoFocus={false} />\r\n                    </div>\r\n                </StyledDivWrapperEmoji> : null}\r\n\r\n               \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CustomCheckbox } from './styles/todoStyles';\r\nimport {FormEvent, useState} from \"react\";\r\nimport {TODO} from \"./ToDo\";\r\nimport { EmojiPicker } from './EmojiPicker';\r\n\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nconst InvisibleSubmit = styled.button`\r\n    visibility: hidden;\r\n    display: none;\r\n`;\r\n\r\n// there is little difference between the TodoBox and this - can I maybe extend the todoBox styles somehow?\r\nconst StyledInputForm = styled.form`\r\n    background-color: ${props => props.theme.todoBackgroundColor};\r\n    padding: 1em;\r\n    grid-gap: 1em;\r\n    display: grid;\r\n    grid-template-columns: auto minmax(0, 1fr) auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 1.5em;\r\n    border-radius: 0.3em;\r\n\r\n    input, textarea {\r\n        font: inherit;\r\n        background: inherit;\r\n       \r\n        color: ${props => props.theme.todoTextColor};\r\n\r\n\r\n        border: none;\r\n        overflow: auto;\r\n        outline: none;\r\n    \r\n        -webkit-box-shadow: none;\r\n        -moz-box-shadow: none;\r\n        box-shadow: none;\r\n    \r\n        resize: none; /*remove the resize handle on the bottom right*/\r\n  }\r\n\r\n  @media(max-width: 650px) {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  @media print\r\n  { \r\n  display: none !important;\r\n\r\n  }\r\n`;\r\n\r\n\r\n\r\ninterface IInputFormProps {\r\n    addTodo(todo: TODO): void;\r\n  }\r\n  /*\r\n  interface IInputFormState {\r\n  }\r\n*/\r\n\r\n//class InputForm extends React.Component<IInputFormProps, IInputFormState> {\r\n\r\n    \r\nexport const InputForm = (props: IInputFormProps) => {\r\n\r\n    const submitRef = React.createRef<HTMLButtonElement>();\r\n    const textRef = React.createRef<HTMLTextAreaElement>();\r\n    const doneRef = React.createRef<HTMLInputElement>();\r\n    \r\n    const createTodo = (event: FormEvent<HTMLFormElement>): void => {\r\n        event.preventDefault();\r\n\r\n        const value = textRef?.current?.value || \"\";\r\n\r\n        if (value === \"\") {\r\n            return;\r\n        }\r\n\r\n        const todo: TODO = {\r\n            key: Date.now().toString(),\r\n            title: value,\r\n            done: doneRef?.current?.checked || false,\r\n            //isEdit: false,\r\n            newIndex: -1\r\n        }\r\n        props.addTodo(todo);\r\n        event.currentTarget.reset();\r\n\r\n        if (textRef?.current) {\r\n            textRef.current.value = \"\";\r\n        }\r\n\r\n    }\r\n\r\n    const addEmoji = (data: any): void => {\r\n        if (textRef?.current) {\r\n            textRef.current.value += data.native;\r\n\r\n            textRef.current.focus();\r\n        }\r\n    }\r\n    \r\n  \r\n    const [refresh, doRefresh] = useState(false);\r\n    const onMouseLeave = () => {\r\n\r\n        doRefresh(!refresh);\r\n    }\r\n\r\n    const onKeyPress = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        //console.log(event.key);\r\n        if (event.key === 'Enter') {\r\n            submitRef.current?.click();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    return (\r\n        \r\n        <StyledInputForm onSubmit={createTodo} onMouseLeave={onMouseLeave}>\r\n            <CustomCheckbox index={-1}>\r\n                <input type=\"checkbox\" name=\"done\" id=\"done\" ref={doneRef} />\r\n                <label htmlFor=\"done\">\r\n                    <img src={process.env.PUBLIC_URL + \"/images/icon-check.svg\"} alt=\"\"/>\r\n                </label>\r\n            </CustomCheckbox>\r\n\r\n            <TextareaAutosize name=\"todo\" id=\"todo\" ref={textRef} data-testid=\"todo-input\" onKeyPress={onKeyPress}/>\r\n\r\n \r\n            <EmojiPicker addEmoji={addEmoji} refresh={refresh}/>\r\n            \r\n            <InvisibleSubmit type=\"submit\" ref={submitRef}></InvisibleSubmit>\r\n        </StyledInputForm>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport twemoji from 'twemoji';\r\nimport styled from 'styled-components';\r\n\r\ninterface IRenderedEmojiProps {\r\n    isDone: boolean,\r\n    value: string\r\n}\r\n // there is little difference between the TodoBox and this - can I maybe extend the todoBox styles somehow?\r\n \r\n const StyledSpanEmoji = styled.span<IRenderedEmojiProps>`\r\n\r\n display: none;\r\n \r\n \r\n @media print\r\n { \r\n \r\n display: inline-block;\r\n width: auto;\r\n \r\n overflow: hidden;\r\n \r\n \r\n text-decoration: ${props => props.isDone && 'line-through'};\r\n \r\n }\r\n `;\r\n\r\n    \r\nexport const RenderedEmoji = (props: IRenderedEmojiProps) => {\r\n\r\n    return (\r\n        <StyledSpanEmoji isDone={props.isDone} value={props.value}\r\n          dangerouslySetInnerHTML={{\r\n            __html: twemoji.parse(props.value, {\r\n              folder: 'svg',\r\n              ext: '.svg',\r\n              size: 35\r\n            })\r\n          }}\r\n        />\r\n      )\r\n    \r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CustomCheckbox, TodoBox } from './styles/todoStyles';\r\nimport { ChangeEvent, useState } from 'react';\r\n\r\n\r\nimport { RenderedEmoji } from './RenderedEmoji';\r\nimport { EmojiPicker } from './EmojiPicker';\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nconst CancelButton = styled.button`\r\n\r\n  @media print { \r\n      display: none !important;\r\n    }\r\n\r\n  border: none;\r\n  background: inherit;\r\n  position: relative;\r\n  height: 1.5em;\r\n  width: 1.5em;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\n\r\nexport interface TODO {\r\n    done: boolean;\r\n    title: string;\r\n    key: string;\r\n    //isEdit: boolean;\r\n    newIndex: number;\r\n}\r\n\r\ninterface ITodoProps {\r\n    index: number;\r\n    todo: TODO;\r\n    deleteTodo?(todo: TODO): void;\r\n    changeTodo?(todo: TODO): void;\r\n}\r\n\r\ninterface ITodoState {\r\n}\r\n\r\n\r\nexport const ToDo = (props: ITodoProps, state: ITodoState) => {\r\n    const textRef = React.createRef<HTMLTextAreaElement>();\r\n\r\n\r\n    const addEmoji = (data: any): void => {\r\n        const updatedTodo: TODO = { ...props.todo };\r\n        updatedTodo.title += data.native;\r\n\r\n        if (props.changeTodo) {\r\n            props.changeTodo(updatedTodo);\r\n        }\r\n\r\n        setFocus();\r\n    }\r\n\r\n    const handleChangeCheckbox = (event: ChangeEvent<HTMLInputElement>) => {\r\n        // 1. get current state and copy it\r\n        const updatedTodo: TODO = { ...props.todo };\r\n\r\n        updatedTodo.done = event.target.checked;\r\n\r\n        // 3. write the update to state\r\n        if (props.changeTodo) {\r\n            props.changeTodo(updatedTodo);\r\n        }\r\n    }\r\n\r\n\r\n    const handleChangeTextArea = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        // 1. get current state and copy it\r\n        const updatedTodo: TODO = { ...props.todo };\r\n\r\n        updatedTodo.title = event.target.value;\r\n\r\n        // 3. write the update to state\r\n        if (props.changeTodo) {\r\n            props.changeTodo(updatedTodo);\r\n        }\r\n\r\n        console.log(updatedTodo.title.length);\r\n    }\r\n\r\n\r\n\r\n    const [refresh, doRefresh] = useState(false);\r\n    const onMouseLeave = () => {\r\n\r\n        doRefresh(!refresh);\r\n    }\r\n\r\n\r\n    const onKeyPress = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        //console.log(event.key);\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    const setFocus = () => {\r\n        if (textRef.current) {\r\n            const element = textRef.current;\r\n\r\n            //console.log(\"onFocus\", element.selectionStart, element.selectionEnd);\r\n\r\n            element.focus();\r\n            element.setSelectionRange(element.value.length,element.value.length);\r\n        }\r\n    };\r\n\r\n    \r\n    return (\r\n        <TodoBox done={props.todo.done} index={props.index} onMouseLeave={onMouseLeave}>\r\n\r\n            <CustomCheckbox index={props.index}>\r\n                <input type=\"checkbox\" name={props.todo.key} id={props.todo.key} checked={props.todo.done} data-testid=\"todo-checkbox\" onChange={handleChangeCheckbox} />\r\n\r\n                <label htmlFor={props.todo.key}>\r\n                    <span>✓</span>\r\n                </label>\r\n            </CustomCheckbox>\r\n            \r\n            <TextareaAutosize name=\"todo\" id=\"todo\" ref={textRef} data-testid=\"todo-input\" onClick={(e) => e.stopPropagation()}\r\n                    onKeyPress={onKeyPress}\r\n                    onChange={handleChangeTextArea}\r\n                    value={props.todo.title}\r\n                    style={{ maxWidth: (props.todo?.title?.length * 0.7) + \"em\" }} />\r\n           \r\n\r\n            <RenderedEmoji value={props.todo.title} isDone={props.todo.done} />\r\n\r\n            <EmojiPicker addEmoji={addEmoji} refresh={refresh} />\r\n\r\n            <CancelButton data-testid=\"cancel-todo\" onClick={() => {\r\n                if (props.deleteTodo) {\r\n                    props.deleteTodo(props.todo);\r\n                }\r\n            }}>\r\n\r\n                <img src='images/icon-cross.svg' alt=\"cancel\"></img>\r\n            </CancelButton>\r\n        </TodoBox>\r\n    )\r\n\r\n}\r\n","import React, { ChangeEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport {TODO} from './ToDo';\r\n\r\n\r\nconst OptionsField = styled.ul`\r\n\r\n@media print\r\n{   \r\n    display: none !important;\r\n}\r\n\r\n  background-color: ${props => props.theme.todoBackgroundColor};\r\n  color: ${props => props.theme.optionsColor};\r\n  /* font-size: 0.8rem; */\r\n  padding: 1em;\r\n  border-bottom-right-radius: 0.3em;\r\n  border-bottom-left-radius: 0.3em;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  align-items: center;\r\n  box-shadow: 10px 10px 20px ${props => props.theme.shadowColor};\r\n\r\n  & > * {\r\n      font-size: 0.8rem;\r\n  }\r\n\r\n  & > *:last-child {\r\n      text-align: right;\r\n  }\r\n\r\n  form {\r\n      ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n      }\r\n  }\r\n\r\n  @media (max-width: 650px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n      padding: 0;\r\n      background-color: ${props => props.theme.mainBackgroundColor};\r\n      box-shadow: none;\r\n\r\n      & > * {\r\n          background-color: ${props => props.theme.todoBackgroundColor};\r\n          padding: 1em;\r\n      }\r\n\r\n      form {\r\n          grid-column: 1 / -1;\r\n          margin-top: 1.5em;\r\n          border-radius: 0.3em;\r\n          box-shadow: 0 0 2em ${props => props.theme.shadowColor};\r\n      }\r\n\r\n      & > *:first-child {\r\n          border-bottom-left-radius: 0.3em;\r\n          height: 100%;\r\n          box-sizing: border-box;\r\n      }\r\n\r\n      & > *:last-child {\r\n          grid-row: 1;\r\n          grid-column: 2;\r\n          border-bottom-right-radius: 0.3em;\r\n      }\r\n  }\r\n`;\r\n\r\nconst FilterItem = styled.li`\r\n\r\n    font-weight: bold;\r\n    label {\r\n        cursor: pointer;\r\n    }\r\n\r\n    label:hover {\r\n        color: ${props => props.theme.optionsHover};\r\n    }\r\n\r\n    input:checked + label {\r\n        color: ${props => props.theme.optionsActive};\r\n    }\r\n\r\n    input[type=\"radio\"] {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst ClearCompleted = styled.button`\r\n\r\n  background-color: inherit;\r\n  border: none;\r\n  color: inherit;\r\n  cursor: pointer;\r\n  font: inherit;\r\n\r\n  &:hover {\r\n  color: ${props => props.theme.optionsHover};\r\n  }\r\n\r\n`;\r\n\r\nexport interface Filter {\r\n    status: string;\r\n}\r\n\r\n\r\ninterface IOptionsProps {\r\n    filter: Filter;\r\n    todos: TODO[];\r\n    changeFilter(filter: Filter): void;\r\n    deleteTodos(): void;\r\n  }\r\n  \r\n\r\nclass Options extends React.Component<IOptionsProps> {\r\n\r\n    handleChange = (e: ChangeEvent<HTMLFormElement>) => {\r\n        this.props.changeFilter({status: `${e.target.id}`});\r\n    }\r\n\r\n    /*\r\n    \r\n    several calls to deleteTodo did not work since setState is a callback function and it wasn't updating the todos in between several calls.\r\n    I worked around this by implementing a new deleteTodos function that eliminates all completed todos... \r\n    */\r\n\r\n    render () {\r\n        const activeTodos = this.props.todos.reduce((tally, todo) => (!todo.done ? tally+1 : tally),  0);\r\n        return (\r\n            <OptionsField>\r\n                <li>{`${activeTodos}`} items left!</li>\r\n                <form onChange={this.handleChange}>\r\n                    <ul>\r\n                        <FilterItem>\r\n                            <input type=\"radio\" defaultChecked={this.props.filter.status === \"all\"} name=\"filter\" id=\"all\" value=\"All\" />\r\n                            <label htmlFor=\"all\">All</label>\r\n                        </FilterItem>\r\n                        <FilterItem>\r\n                            <input type=\"radio\" defaultChecked={this.props.filter.status === \"active\"} name=\"filter\" id=\"active\" value=\"Active\" />\r\n                            <label htmlFor=\"active\">Active</label>\r\n                        </FilterItem>\r\n                        <FilterItem>\r\n                            <input type=\"radio\" defaultChecked={this.props.filter.status === \"completed\"} name=\"filter\" id=\"completed\" value=\"completed\" />\r\n                            <label htmlFor=\"completed\">Completed</label>\r\n                        </FilterItem>\r\n                    </ul>\r\n                </form>\r\n                <li><ClearCompleted onClick={() => this.props.deleteTodos()} data-testid=\"clear-completed\">Clear completed</ClearCompleted></li>\r\n            </OptionsField>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport {Options};","import styled from 'styled-components';\r\n//import {Theme} from './styles/theme';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport { format } from 'date-fns';\r\n\r\nconst DatePickerWrapper = styled.div`\r\n    align-self: center;\r\n\r\n    .react-datepicker {\r\n        position: absolute;\r\n        z-index: 100;\r\n    }\r\n\r\n    .example-custom-input {\r\n        cursor: pointer;\r\n        padding: 5px 15px;\r\n        border: 0;\r\n        border-radius: 4px;\r\n        background: transparent;\r\n        font: inherit;\r\n        color: #fff;\r\n    }\r\n`\r\n\r\nconst StyledHeader = styled.div`\r\n\r\n    \r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n\r\n    h1 {\r\n        \r\n        color: ${props => props.theme.headerColor};\r\n        font-weight: 700;\r\n        text-transform: uppercase;\r\n        font-size: 1rem;\r\n        letter-spacing: 0.3em;\r\n        margin: 1em 0;\r\n    }\r\n\r\n    span {\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        align-self: center;\r\n\r\n        height: 30px;\r\n\r\n        img { \r\n            height: 30px;\r\n            margin-right: 5px;\r\n        }\r\n\r\n        span {\r\n            border-bottom: dotted 1px #f6f6ff;\r\n            color: #f6f6ff;\r\n            font-weight: bold;\r\n        }\r\n\r\n    }\r\n\r\n    .theme-changer {\r\n        border: none;\r\n        background: transparent;\r\n        cursor: pointer;\r\n    }\r\n    \r\n  \r\n    @media print { \r\n        justify-content: right;\r\n\r\n        h1, button, img, span, .theme-changer, .react-datepicker {\r\n            display: none;\r\n        }\r\n\r\n        .example-custom-input {\r\n            \r\n            display: block !important;\r\n\r\n                margin-top: -30px;\r\n                align-self: flex-end;\r\n                color: black;\r\n                float: right;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\n\r\n\r\nexport const ListHeader = (props: any) => {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const formatString = \"MMMM d, yyyy\";\r\n\r\n    const handleChange = (date: Date) => {\r\n        setIsOpen(!isOpen);\r\n        setStartDate(date);\r\n    };\r\n    const handleClick = (e: any) => {\r\n        e.preventDefault();\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n\r\n    const printPage = () => {\r\n        window.print();\r\n\r\n        try {\r\n            ReactGA.event({\r\n                category: 'User',\r\n                action: 'Printed tasks'\r\n            });\r\n        } catch (e) {\r\n\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <StyledHeader className=\"header\">\r\n            <h1>Print your tasks</h1>\r\n\r\n            <DatePickerWrapper>\r\n\r\n                <button className=\"example-custom-input\" onClick={handleClick}>{format(startDate, formatString)}</button>\r\n\r\n                {isOpen ?\r\n\r\n                    <DatePicker className=\".datepicker\"\r\n                        inline\r\n                        dateFormat={formatString}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    : null}\r\n\r\n\r\n\r\n            </DatePickerWrapper>\r\n\r\n            <span className=\"theme-changer\" onClick={printPage}>\r\n                <img alt=\"theme-changer\" src=\"./logo192.png\">\r\n                </img>\r\n                <span>Print</span>\r\n            </span>\r\n        </StyledHeader>\r\n    )\r\n\r\n}\r\n","import {useState, useEffect} from \"react\";\r\n\r\n/*\r\nexport interface Sticky {\r\n    value: any;\r\n    setValue: Dispatch<any>;\r\n    clearState(): void;\r\n}\r\n*/\r\n\r\n\r\nconst inIframe = () => {\r\n  try {\r\n      return window.self !== window.top;\r\n  } catch (e) {\r\n      return true;\r\n  }\r\n}\r\n\r\nexport const useStickyState = (key: string, defaultValue: any) => {\r\n    const [value, setValue] = useState(() => {\r\n\r\n      if (!inIframe()) {\r\n        //console.log(\"not iniframe\");\r\n\r\n        const stickyValue = window.localStorage.getItem(key);\r\n        return stickyValue !== null\r\n          ? JSON.parse(stickyValue)\r\n          : defaultValue;\r\n      } else {\r\n        \r\n        //console.log(\"iframe!!\");\r\n        return defaultValue;\r\n      }\r\n    });\r\n\r\n    const clearState = () => localStorage.removeItem(key);    \r\n\r\n    useEffect(() => {\r\n\r\n      if (!inIframe()) {\r\n        window.localStorage.setItem(key, JSON.stringify(value));\r\n      }\r\n    }, [key, value]);\r\n    return [value, setValue, clearState];\r\n}\r\n","import styled, { ThemeProvider } from 'styled-components';\r\nimport { DragDropContext, Droppable, Draggable, DropResult, DragUpdate, ResponderProvided } from 'react-beautiful-dnd';\r\nimport GlobalStyle from './styles/globalStyles';\r\nimport { lightTheme, /*darkTheme,*/ Theme } from './styles/theme';\r\nimport InputForm from './InputForm';\r\nimport { TODO, ToDo } from './ToDo';\r\nimport { Filter, Options } from './Options';\r\nimport { ListHeader } from './ListHeader';\r\nimport { useStickyState } from \"./storage/LocalStorage\";\r\nimport { useEffect } from 'react';\r\n\r\nimport ReactGA from 'react-ga';\r\n\r\nconst TodoWrapper = styled.div`\r\n    max-width: 800px;\r\n    position: relative;\r\n    margin: auto;\r\n\r\n    @media (max-width: 650px) {\r\n        padding: 0 2rem;\r\n        top: 1.5rem;\r\n    }\r\n`;\r\n\r\nconst TodoList = styled.ul`\r\n\r\n    box-shadow: 10px 10px 20px ${props => props.theme.shadowColor};\r\n    div:first-child li{\r\n      border-top-left-radius: 0.3em;\r\n      border-top-right-radius: 0.3em;\r\n    }\r\n\r\n    @media (max-width: 650px) {\r\n        box-shadow: none;\r\n    }\r\n`;\r\n\r\nconst BackgroundHeader = styled.div`\r\n\r\n@media print { display: none !important; }\r\n\r\n  width: 100vw;\r\n  position: absolute;\r\n  top: 0;\r\n  height: 30vh;\r\n  background: ${props => props.theme.mainBackground} center center/cover;\r\n\r\n  @media (max-width: 650px) {\r\n      content: ${props => props.theme.mobileBackground};\r\n      max-width: 100vw;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n\r\n@media print\r\n{    \r\n    display: none !important;\r\n}\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    padding: 1.5em 0;\r\n    color: ${props => props.theme.optionsColor};\r\n`;\r\n\r\nexport interface State {\r\n    //todos: TODO[];\r\n    filter: Filter;\r\n    currentTheme: Theme;\r\n}\r\n\r\nconst inIframe = () => {\r\n    try {\r\n        return window.self !== window.top;\r\n    } catch (e) {\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nexport interface ParcedTask {\r\n    title: string;\r\n    done: boolean;\r\n}\r\n\r\n\r\nexport const App = (props: any) => {\r\n\r\n\r\n    //const [todos, todosSetValue] = useState<TODO[]>([]);\r\n    const [todos, todosSetValue] = useStickyState(\"todos\", []);\r\n    const [filterValue, setFilter] = useStickyState(\"filter\", {\r\n        status: 'all',\r\n    });\r\n\r\n    const state: State = {\r\n        filter: filterValue,\r\n        currentTheme: lightTheme,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let defaultTodos: TODO[] = [];\r\n\r\n        const onMessageReceivedFromIframe = (event: any) => {\r\n            const importTodos = (values: ParcedTask[]) => {\r\n                values.forEach((value: ParcedTask, index: number) => {\r\n                    const todo: TODO = {\r\n                        key: Date.now().toString() + index.toString(),\r\n                        title: value.title,\r\n                        done: value.done,\r\n                        newIndex: index\r\n                    }\r\n                    defaultTodos.push(todo);\r\n                });\r\n\r\n                todosSetValue(defaultTodos);\r\n\r\n            };\r\n\r\n            if (typeof event.data === 'object' && event.data.call === 'sendTasks') {\r\n\r\n                //console.log('tasks', event.data.value);\r\n                importTodos(event.data.value as ParcedTask[]);\r\n\r\n                try {\r\n                    ReactGA.event({\r\n                        category: 'User',\r\n                        action: 'Imported tasks',\r\n                        label: event.data.domain,\r\n                    });\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (inIframe()) {\r\n            window.addEventListener(\"message\", onMessageReceivedFromIframe);\r\n            window.parent.postMessage({ call: 'AppIsReady' }, '*');\r\n        }\r\n\r\n    }, [todosSetValue]);\r\n\r\n\r\n    // method to add a todo item to the list:\r\n    const addTodo = (todo: TODO) => {\r\n        // copy the state\r\n        const newTodos: TODO[] = [...todos];\r\n        // add my item to the copied state\r\n        newTodos.push(todo);\r\n        // set the state with the state API\r\n        todosSetValue(newTodos as any);\r\n\r\n        try {\r\n            ReactGA.event({\r\n                category: 'User',\r\n                action: 'Created a Task'\r\n            });\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // change a todo-item\r\n    const changeTodo = (todo: TODO) => {\r\n        // copy the state\r\n        const newTodos: TODO[] = [...todos];\r\n        // update the item in question\r\n        const myIndex = newTodos.findIndex((item: TODO) => item.key === todo.key);\r\n\r\n        //console.log('new state', todo.isEdit);\r\n        //todo.isEdit = false;\r\n        newTodos[myIndex] = todo;\r\n        todosSetValue(newTodos as any);\r\n\r\n    }\r\n\r\n    const deleteTodos = () => {\r\n        const newTodos = [...todos];\r\n        const uncomplete = newTodos.filter((item: TODO) => item.done === false);\r\n\r\n        todosSetValue(uncomplete as any);\r\n    }\r\n\r\n    const deleteTodo = (todo: TODO) => {\r\n        const newTodos = [...todos];\r\n        const myIndex = newTodos.findIndex((item: TODO) => item.key === todo.key)\r\n        newTodos.splice(myIndex, 1);\r\n\r\n\r\n        newTodos.forEach((todo: TODO, index: number) => {\r\n            todo.newIndex = index;\r\n        });\r\n\r\n        todosSetValue(newTodos as any);\r\n\r\n        try {\r\n            ReactGA.event({\r\n                category: 'User',\r\n                action: 'Deleted the Task'\r\n            });\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const changeFilter = (filterObject: Filter) => {\r\n        // for now, I simply want to override the filter, but this could change\r\n        //props.setState({filter: filterObject});\r\n        setFilter(filterObject);\r\n    }\r\n\r\n    const applyListFilter = () => {\r\n\r\n        switch (state.filter.status) {\r\n            case \"active\":\r\n                return todos.filter((todo: TODO) => todo.done === false);\r\n            case \"completed\":\r\n                return todos.filter((todo: TODO) => todo.done === true);\r\n            default:\r\n                return todos;\r\n        }\r\n    }\r\n\r\n    const handleOnDragEnd = (result: DropResult) => {\r\n        // avoid application error if item is dragged outside of the dragdropcontext\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        // copy the state\r\n        const reorderedTodos = [...todos];\r\n        // obtain the todo and remove it from the array\r\n        const [movedTodo] = reorderedTodos.splice(result.source.index, 1);\r\n        reorderedTodos.splice(result.destination.index, 0, movedTodo);\r\n        reorderedTodos.forEach((todo: TODO, index: number) => todo.newIndex = index);\r\n\r\n        todosSetValue(reorderedTodos as any);\r\n\r\n    }\r\n\r\n    const handleOnDragUpdate = (initial: DragUpdate, provided: ResponderProvided) => {\r\n        //console.log(\"new index\", initial, provided);\r\n\r\n        const newTodos: TODO[] = [...todos];\r\n\r\n        let indexes = newTodos.map((todo: TODO, index: number) => index);\r\n\r\n        //console.log(\"before\", indexes);\r\n        indexes.splice(initial.source.index, 1);\r\n        indexes.splice(initial.destination?.index || 0, 0, initial.source.index);\r\n\r\n        //console.log(\"after\", indexes);\r\n\r\n        newTodos.forEach((todo: TODO, index: number) => {\r\n            todo.newIndex = indexes.indexOf(index);\r\n        })\r\n        todosSetValue(newTodos as any);\r\n    }\r\n\r\n    const getIndex = (todo: TODO, index: number): number => {\r\n        //console.log(todo.newIndex, index);\r\n\r\n        if (todo.newIndex >= 0) {\r\n            return todo.newIndex;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={state.currentTheme}>\r\n            <GlobalStyle theme={state.currentTheme} />\r\n            <BackgroundHeader></BackgroundHeader>\r\n            <TodoWrapper>\r\n                <ListHeader />\r\n\r\n                <InputForm addTodo={addTodo} />\r\n                <DragDropContext onDragEnd={handleOnDragEnd} onDragUpdate={handleOnDragUpdate}>\r\n                    <Droppable droppableId=\"todos\" >\r\n\r\n                        {(provided, snapshot) => (\r\n                            <TodoList {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {applyListFilter().map((todo: TODO, index: number) =>\r\n                                    <Draggable key={todo.key} draggableId={todo.key.toString()} index={index} /*disableInteractiveElementBlocking={!!(todo.isEdit)}*/ >\r\n                                        {(provided, snapshot) => (\r\n                                            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                <ToDo index={getIndex(todo, index)} todo={todo} changeTodo={changeTodo} deleteTodo={deleteTodo} />\r\n                                            </div>)}\r\n                                    </Draggable>)}\r\n                                {provided.placeholder}\r\n                            </TodoList>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <Options filter={state.filter} changeFilter={changeFilter} todos={todos} deleteTodos={deleteTodos} />\r\n                <Footer>\r\n                    <p>Drag and drop to reorder list</p>\r\n                </Footer>\r\n            </TodoWrapper>\r\n        </ThemeProvider>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = (onPerfEntry?: any) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport ReactGA from 'react-ga';\r\nconst TRACKING_ID = \"UA-9798363-13\"; // YOUR_OWN_TRACKING_ID\r\n\r\nif (document.domain !== \"localhost\") {\r\n  ReactGA.initialize(TRACKING_ID);\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}